name:                scheme-analysis
version:             0.1.0.0
author:              James Coleman Gibson
copyright:           2017 James Coleman Gibson
category:            Web
build-type:          Simple
cabal-version:       >=1.10

executable scheme-analysis
  hs-source-dirs:      main/
  main-is:             Main.hs
  ghc-options:         -Wall
  build-depends:       base >= 4.7 && < 5
                     , scheme-analysis
  other-modules:
  default-language:    Haskell2010

library
  hs-source-dirs:      src/
  exposed-modules:     Analysis.Analysis
                     , Analysis.AnalysisTypes
                     , Analysis.Analyzers.AppendAnalysis
                     , DataFlow.DataFlow
                     , Scheme.Parse
                     , Scheme.Types
                     , Scheme.JLParsingTypes
                     , Scheme.ReadSource
                     , Interpreter.Types
                     , Interpreter.Evaluate
                     , Scheme.Tokenize
  other-modules:       Scheme.JLPrimitiveProcs
                     , Scheme.JLPrimitiveSyntax
                     , Interpreter.PrimProcs
  build-depends:       base >= 4.7 && < 5
                     , parsec
                     , either
                     , transformers
                     , containers
                     , mtl
                     , path
                     , path-io
  default-language:    Haskell2010

test-suite scheme-analysis-test
  type:                exitcode-stdio-1.0
  main-is:             Tests.hs
  hs-source-dirs:      test/
                     , test/Parse
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N
  build-depends:       base
                     , HUnit
                     , QuickCheck
                     , scheme-analysis
  other-modules:       Parse.ParseConstantsTest
                     , Parse.ParseQuoteTest
                     , Parse.ParseApplicationTest
                     , Parse.TokenizeTest
                     , Parse.Helpers
                     , Evaluation.EvaluationTest
                     , Analysis.AppendAnalysisTest
  default-language:    Haskell2010
